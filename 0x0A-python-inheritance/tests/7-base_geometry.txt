7-base_geometry.txt testing for the integer method and the area method
==================================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> b1 = BaseGeometry()


---------------------------------
test for the normal integer
>>> b1.integer_validator("my_int", 12)
>>> b1.integer_validator("int", 0)
Traceback (most recent call last):
	...
ValueError: int must be greater than 0


---------------------------------
test for a negative number
>>> b1.integer_validator("int", -1)
Traceback (most recent call last):
	...
ValueError: int must be greater than 0


------------------------------------
test for non integer
>>> b1.integer_validator("int", "1")
Traceback (most recent call last):
	...
TypeError: int must be an integer


-------------------------------------
test for the area method
>>> b1.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented


------------------------------------
BaseGeometry.area()
>>> BaseGeometry.area()
Traceback (most recent call last):
	...
TypeError: BaseGeometry.area() missing 1 required positional argument: 'self'

-------------------------------------
>>> b1.integer_validator("int")
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

--------------------------------------
>>> b1.integer_validator("age", (4,))
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> b1.integer_validator()
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> b1.integer_validator("age", True)
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> b1.integer_validator("age", None)
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> b1.integer_validator("age", [3])
Traceback (most recent call last):
	...
TypeError: age must be an integer

